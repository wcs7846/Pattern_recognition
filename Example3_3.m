clc;
clear;
close all;
%这个是练习3.3的实例程序
%------ 这个算法是采用Kesler结构的感知器算法，以下为一些重要的说明：
%       1.这个算法只能用在可以线性可分的分类问题中
%       2.这个算法会无限次循环下去，直到找到一个可以完全分类的权向量
%---------------------------------------------------------------------------------------------------------
%{
%产生数据集
randn('seed',0);
P1=[1  1];
m1=[1 14]';
m2=[14 1]';
sita=sqrt(4);
S1=(sita^2)*eye(2);
S2=S1;
N=1000;
x1_Source=mvnrnd(m1,S1,N);
x2_Source=mvnrnd(m2,S2,N);
x1=P1(1)*x1_Source;
x2=P1(2)*x2_Source;
figure(1);
%这里是显示的训练数据
plot(x1_Source((1:N/2),1),x1_Source((1:N/2),2),'ro','MarkerSize',3);hold on;
plot(x2_Source((1:N/2),1),x2_Source((1:N/2),2),'bo','MarkerSize',3);hold on;
X1xlf=[x1(1:(N/2),:);x2(1:(N/2),:)];
%这里是显示的未训练数据
plot(x1_Source(((N/2)+1:N),1),x1_Source(((N/2)+1:N),2),'mo','MarkerSize',3);hold on;
plot(x2_Source(((N/2)+1:N),1),x2_Source(((N/2)+1:N),2),'mo','MarkerSize',3);hold on;
X1xln=[x1((N/2)+1:N,:);x2((N/2)+1:N,:)];
%在第二个图中显示
figure(2);
plot(x1_Source((1:N/2),1),x1_Source((1:N/2),2),'ro','MarkerSize',3);hold on;
plot(x2_Source((1:N/2),1),x2_Source((1:N/2),2),'bo','MarkerSize',3);hold on;
%}
%---------------------------------------------------------------------------------------------------------
%原始数据
x1=[ 1  1; 2  2; 2  1];
x2=[ 1 -1; 1 -2; 2 -2];
x3=[-1  1;-1  2;-2  1];
%---------------------------------------------------------------------------------------------------------
%显示数据
figure(1);
plot(x1(:,1),x1(:,2),'ro','MarkerSize',3);hold on;
plot(x2(:,1),x2(:,2),'bo','MarkerSize',3);hold on;
plot(x3(:,1),x3(:,2),'go','MarkerSize',3);hold on;
%---------------------------------------------------------------------------------------------------------
%扩展向量
Kx0=zeros(1,length(x1(1,:))+1);%定义一个空的
Kx1=[x1(1,:),1];
Kx2=[x2(2,:),1];
Kx3=[x3(3,:),1];
%构建权向量
w11=[Kx0,Kx0,Kx0]';
w12=[Kx1,-Kx1,Kx0]';
w13=[Kx1,Kx0,-Kx1]';
w21=[-Kx2,Kx2,Kx0]';
w22=[Kx0,Kx0,Kx0]';
w23=[Kx0,Kx2,-Kx2]';
w31=[-Kx3,Kx0,Kx3]';
w32=[Kx0,-Kx3,Kx3]';
w33=[Kx0,Kx0,Kx0]';
%
w1=[w11,w12,w13]';
w2=[w21,w22,w23]';
w3=[w31,w32,w33]';
%
w=[w1',w2',w3']';
%
KxT=[x1(2,:),1];
xT=[-KxT,KxT,Kx0]';
%计算下一个权向量
wF=w'*xT;
%分配好相应的权向量
w1N=wF(1:3);
w2N=wF(1+3:3+3);
w3N=wF(1+2*3:3+2*3);
%画图
n1=-3:0.01:3;
n2_1=-3:0.01:3;
n2_2=-3:0.01:3;
n2_3=-3:0.01:3;
for n=1:1:length(n1)
    n2_1(n)=(-w1N(1)*n1(n)-w1N(3))/w1N(2);
    n2_2(n)=(-w2N(1)*n1(n)-w2N(3))/w2N(2);
    n2_3(n)=(-w3N(1)*n1(n)-w3N(3))/w3N(2);
end
plot(n1,n2_1,'r.','MarkerSize',3);hold on;
plot(n1,n2_2,'b.','MarkerSize',3);hold on;
plot(n1,n2_3,'g.','MarkerSize',3);hold on;